package com.example.token;

import com.credits.scapi.annotations.*;
import com.credits.scapi.v1.*;
import com.credits.scapi.v2.SmartContract;
import java.math.BigDecimal;


public class %s extends SmartContract implements BasicTokenStandard {

    public %s() {
    }

    private BigDecimal getTokensBalance(String address) {
        return null;
    }

    private void contractIsNotFrozen() {
    }

    private BigDecimal scale(BigDecimal value) {
        return null;
    }

    @Override
    public String getName() {
        return null;
    }

    @Override
    public String getSymbol() {
        return null;
    }

    @Override
    public int getDecimal() {
        return 0;
    }

    @Override
    public boolean setFrozen(boolean frozen) {
        return false;
    }

    @Override
    public BigDecimal totalSupply() {
        return null;
    }

    @Override
    public BigDecimal balanceOf(String owner) {
        return null;
    }

    @Override
    public BigDecimal allowance(String owner, String spender) {
        return null;
    }

    @Override
    public boolean transfer(String to, BigDecimal amount) {
        return false;
    }

    @Override
    public boolean transferFrom(String from, String to, BigDecimal amount) {
        return false;
    }

    @Override
    public void approve(String spender, BigDecimal amount) {
    }

    @Override
    public boolean burn(BigDecimal amount) {
        return false;
    }

    @Override
    public String payable(BigDecimal amount, byte[] userData) {
        return "";
    }
}
